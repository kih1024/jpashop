spring:
#  datasource:
#    url: jdbc:h2:mem:test # 이렇게 쓰면 h2 데이터베이스의 메모리 모드로 동작을 한다.
#    password:
#    driver-class-name: org.h2.Driver
#  jpa:
#    hibernate:
#      ddl-auto: create-drop # 테스트는 기본적으로 create-drop이다. 그냥 create는 내가 가지고 있는 엔티티를 드랍한다음에 create를 하고 어플리케이션을 실행한다.
# 반면 create-drop은 똑같은데 마지막 종료 시점에 드랍 쿼리를 한번더 날려줌.그래서 완전히 깨끗이 초기화

#    properties:
#      hibernate:
#      # show_sql: true
#      format_sql: true

# 하지만 스프링 부트에서는 위 주석 처리하는 부분이 없어도 된다! 그래서 h2 데이터베이스의 메모리 모드로 동작을 시킨다. 왜냐하면 스프링부트가 별도의 설정이 없으면
# 메모리 모드로 돌려버린다. 극단적으로 이 yml 파일을 다 비워도 된다!

logging.level:
  org.hibernate.SQL: debug
#  아래는 쿼리 파라미터를 ?를 보이는것을 정확한 숫자로 보이게 해준다. 알수는 있지만 그래도 ? 로 표시됨. 그래서 외부 라이브러리를 사용한다.
#  org.hibernate.type: trace